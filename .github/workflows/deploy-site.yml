on: [push]

jobs:
  # check if we should even run the job
  check:
    runs-on: ubuntu-latest
    name: Check if we should run the job
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install root workspace dependencies
        run: |
          echo "recursive-install=false" >> .npmrc &&
          pnpm install

      - name: Chceck if any files changed
        id: check
        run: |
          echo "::set-output name=should_run::$(pnpm --silent run changed -p .github/workflows/deploy-site.yml ./apps/site/package.json ${{ github.event.before }})"

  publish:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.should_run == 'true'
    permissions:
      contents: read
      deployments: write
    name: Deploy site to CF Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          npm install -g wrangler &&
          echo "recursive-install=false" >> .npmrc &&
          cd apps/site &&
          pnpm install

      - name: Build site
        env:
          BASE_URL: ${{ vars.REPLACE_BASE_URL }}
          MAPBOX_TOKEN: ${{ secrets.REPLACE_MAPBOX_TOKEN }}
          SENTRY_DSN: ${{ vars.REPLACE_SENTRY_DSN }}
        run: |
          cd apps/site &&
          pnpm build

      - name: Find sourcemaps
        id: sourcemaps
        run: |
          echo "::set-output name=files::$(find apps/site/public apps/site/functions -name '*.map')"

      - uses: actions/checkout@v2
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT_CLIENT }}
          SENTRY_URL: ${{ vars.SENTRY_URL }}
        with:
          environment: production
          dist: ${{ github.sha }}
          sourcemaps: ${{ steps.sourcemaps.outputs.files }}

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@22d9e5e143c6f9400b438a489e8d434b416d235d
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          directory: public
          workingDirectory: apps/site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
